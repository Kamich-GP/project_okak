# –§–∞–π–ª —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –±–æ—Ç–∞
from telebot import types


# –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def num_button():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    but1 = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Äüìû', request_contact=True)
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(but1)
    return kb


# –ö–Ω–æ–ø–∫–∏ –≤—ã–≤–æ–¥–∞ —Ç–æ–≤–∞—Ä–æ–≤
def main_menu(products):
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=2)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    cart = types.InlineKeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞üõí', callback_data='cart')
    all_products = [types.InlineKeyboardButton(text=f'{i[1]}', callback_data=i[0])
                    for i in products]
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(*all_products)
    kb.row(cart)
    return kb


# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª-–≤–∞ —Ç–æ–≤–∞—Ä–∞
def choose_pr_count(pr_count, plus_or_minus='', amount=1):
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=3)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    plus = types.InlineKeyboardButton(text='+', callback_data='increment')
    minus = types.InlineKeyboardButton(text='-', callback_data='decrement')
    count = types.InlineKeyboardButton(text=str(amount), callback_data=str(amount))
    back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='back')
    to_cart = types.InlineKeyboardButton(text='–í –∫–æ—Ä–∑–∏–Ω—Éüõí', callback_data='to_cart')
    # –ê–ª–≥–æ—Ä–∏—Ç–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª-–≤–∞ —Ç–æ–≤–∞—Ä–∞
    if plus_or_minus == 'increment':
        if amount < pr_count:
            count = types.InlineKeyboardButton(text=str(amount+1), callback_data=str(amount+1))
    elif plus_or_minus == 'decrement':
        if 1 < amount:
            count = types.InlineKeyboardButton(text=str(amount-1), callback_data=str(amount-1))
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(minus, count, plus)
    kb.row(back, to_cart)
    return kb

# –ö–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
def cart_buttons():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=2)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    clear = types.InlineKeyboardButton(text='–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—ÉüóëÔ∏è', callback_data='clear')
    order = types.InlineKeyboardButton(text='–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑üßæ', callback_data='order')
    back = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥üîô', callback_data='back')
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(clear, order)
    kb.row(back)
    return kb

# –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–∫–∞—Ü–∏–∏
def loc_button():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º—É –∫–Ω–æ–ø–∫—É
    but1 = types.KeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ø–æ–∑–∏—Ü–∏—éüìç', request_location=True)
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(but1)
    return kb

# –ö–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω-–º–µ–Ω—é
def admin_buttons():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    but1 = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç')
    but2 = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç')
    but3 = types.KeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç')
    but4 = types.KeyboardButton('–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(but1, but2, but3, but4)
    return kb

# –ö–Ω–æ–ø–∫–∏ –≤—ã–≤–æ–¥–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
def admin_pr_buttons(products):
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    back = types.KeyboardButton('–ù–∞–∑–∞–¥')
    all_products = [types.KeyboardButton(f'{i[1]}') for i in products]
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(*all_products)
    kb.row(back)
    return kb

# –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –∞—Ç—Ä–∏–±—É—Ç–∞
def attr_buttons():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb = types.InlineKeyboardMarkup(row_width=2)
    # –°–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–Ω–æ–ø–∫–∏
    name = types.InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data='name')
    des = types.InlineKeyboardButton(text='–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='des')
    count = types.InlineKeyboardButton(text='–ö–æ–ª-–≤–æ', callback_data='count')
    price = types.InlineKeyboardButton(text='–¶–µ–Ω–∞', callback_data='price')
    photo = types.InlineKeyboardButton(text='–§–æ—Ç–æ', callback_data='photo')
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    kb.add(name, des, count, price)
    kb.row(photo)
    return kb
